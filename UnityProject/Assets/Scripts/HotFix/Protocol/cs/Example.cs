// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: example.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ProtoTest {

  /// <summary>Holder for reflection information generated from example.proto</summary>
  public static partial class ExampleReflection {

    #region Descriptor
    /// <summary>File descriptor for example.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ExampleReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg1leGFtcGxlLnByb3RvEglQcm90b1Rlc3QiuwIKC1Rlc3RSZXF1ZXN0Eg8K",
            "AmlkGAEgASgNSACIAQESDAoEbmFtZRgCIAEoCRINCgV2YWx1ZRgDIAEoEhIK",
            "CgJ2MRgEIAEoBxIKCgJ2MhgFIAEoBhIKCgJ2MxgGIAEoDxIKCgJ2NBgHIAEo",
            "EBIMCgRjb2luGAggASgCEg0KBW1vbmV5GAkgASgBEgwKBGZsYWcYCiABKAgS",
            "DAoEdGVzdBgLIAEoDBINCgVhcnJheRgMIAMoCRIsCgNtYXAYDSADKAsyHy5Q",
            "cm90b1Rlc3QuVGVzdFJlcXVlc3QuTWFwRW50cnkSJQoIdGVzdEVudW0YDiAB",
            "KA4yEy5Qcm90b1Rlc3QuVGVzdEVudW0aKgoITWFwRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgSOgI4AUIFCgNfaWQiHQoMVGVzdFJlc3BvbnNl",
            "Eg0KBXBvd2VyGAEgASgNKmIKCFRlc3RFbnVtEgsKB1VOS05PV04QABIJCgVT",
            "VEFSVBABEgkKBVBBVVNFEAISCAoEU1RPUBAEEgsKB1JFU1RBUlQQCBIRCgRU",
            "ZXN0EP///////////wESCQoFVGVzdDEQCWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ProtoTest.TestEnum), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoTest.TestRequest), global::ProtoTest.TestRequest.Parser, new[]{ "Id", "Name", "Value", "V1", "V2", "V3", "V4", "Coin", "Money", "Flag", "Test", "Array", "Map", "TestEnum" }, new[]{ "Id" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ProtoTest.TestResponse), global::ProtoTest.TestResponse.Parser, new[]{ "Power" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum TestEnum {
    /// <summary>
    /// 第一个必须是0
    /// </summary>
    [pbr::OriginalName("UNKNOWN")] Unknown = 0,
    [pbr::OriginalName("START")] Start = 1,
    [pbr::OriginalName("PAUSE")] Pause = 2,
    [pbr::OriginalName("STOP")] Stop = 4,
    [pbr::OriginalName("RESTART")] Restart = 8,
    [pbr::OriginalName("Test")] Test = -1,
    [pbr::OriginalName("Test1")] Test1 = 9,
  }

  #endregion

  #region Messages
  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TestRequest : pb::IMessage<TestRequest>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestRequest> _parser = new pb::MessageParser<TestRequest>(() => new TestRequest());
    private pb::UnknownFieldSet _unknownFields;
    private int _hasBits0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TestRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoTest.ExampleReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestRequest(TestRequest other) : this() {
      _hasBits0 = other._hasBits0;
      id_ = other.id_;
      name_ = other.name_;
      value_ = other.value_;
      v1_ = other.v1_;
      v2_ = other.v2_;
      v3_ = other.v3_;
      v4_ = other.v4_;
      coin_ = other.coin_;
      money_ = other.money_;
      flag_ = other.flag_;
      test_ = other.test_;
      array_ = other.array_.Clone();
      map_ = other.map_.Clone();
      testEnum_ = other.testEnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestRequest Clone() {
      return new TestRequest(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private readonly static uint IdDefaultValue = 0;

    private uint id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Id {
      get { if ((_hasBits0 & 1) != 0) { return id_; } else { return IdDefaultValue; } }
      set {
        _hasBits0 |= 1;
        id_ = value;
      }
    }
    /// <summary>Gets whether the "id" field is set</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool HasId {
      get { return (_hasBits0 & 1) != 0; }
    }
    /// <summary>Clears the value of the "id" field</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void ClearId() {
      _hasBits0 &= ~1;
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 3;
    private long value_;
    /// <summary>
    /// Uses variable-length encoding. Inefficient for encoding negative numbers – if your field is likely to have negative values, use sint32 instead.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "v1" field.</summary>
    public const int V1FieldNumber = 4;
    private uint v1_;
    /// <summary>
    /// 无符号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint V1 {
      get { return v1_; }
      set {
        v1_ = value;
      }
    }

    /// <summary>Field number for the "v2" field.</summary>
    public const int V2FieldNumber = 5;
    private ulong v2_;
    /// <summary>
    /// Always eight bytes. More efficient than uint64 if values are often greater than 2^56.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong V2 {
      get { return v2_; }
      set {
        v2_ = value;
      }
    }

    /// <summary>Field number for the "v3" field.</summary>
    public const int V3FieldNumber = 6;
    private int v3_;
    /// <summary>
    /// 有符号
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int V3 {
      get { return v3_; }
      set {
        v3_ = value;
      }
    }

    /// <summary>Field number for the "v4" field.</summary>
    public const int V4FieldNumber = 7;
    private long v4_;
    /// <summary>
    /// Always eight bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public long V4 {
      get { return v4_; }
      set {
        v4_ = value;
      }
    }

    /// <summary>Field number for the "coin" field.</summary>
    public const int CoinFieldNumber = 8;
    private float coin_;
    /// <summary>
    /// 浮点数
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Coin {
      get { return coin_; }
      set {
        coin_ = value;
      }
    }

    /// <summary>Field number for the "money" field.</summary>
    public const int MoneyFieldNumber = 9;
    private double money_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Money {
      get { return money_; }
      set {
        money_ = value;
      }
    }

    /// <summary>Field number for the "flag" field.</summary>
    public const int FlagFieldNumber = 10;
    private bool flag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Flag {
      get { return flag_; }
      set {
        flag_ = value;
      }
    }

    /// <summary>Field number for the "test" field.</summary>
    public const int TestFieldNumber = 11;
    private pb::ByteString test_ = pb::ByteString.Empty;
    /// <summary>
    /// C# - ByteString
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pb::ByteString Test {
      get { return test_; }
      set {
        test_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "array" field.</summary>
    public const int ArrayFieldNumber = 12;
    private static readonly pb::FieldCodec<string> _repeated_array_codec
        = pb::FieldCodec.ForString(98);
    private readonly pbc::RepeatedField<string> array_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// 数组
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<string> Array {
      get { return array_; }
    }

    /// <summary>Field number for the "map" field.</summary>
    public const int MapFieldNumber = 13;
    private static readonly pbc::MapField<string, long>.Codec _map_map_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForSInt64(16, 0L), 106);
    private readonly pbc::MapField<string, long> map_ = new pbc::MapField<string, long>();
    /// <summary>
    /// 字典
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<string, long> Map {
      get { return map_; }
    }

    /// <summary>Field number for the "testEnum" field.</summary>
    public const int TestEnumFieldNumber = 14;
    private global::ProtoTest.TestEnum testEnum_ = global::ProtoTest.TestEnum.Unknown;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::ProtoTest.TestEnum TestEnum {
      get { return testEnum_; }
      set {
        testEnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TestRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TestRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      if (V1 != other.V1) return false;
      if (V2 != other.V2) return false;
      if (V3 != other.V3) return false;
      if (V4 != other.V4) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Coin, other.Coin)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Money, other.Money)) return false;
      if (Flag != other.Flag) return false;
      if (Test != other.Test) return false;
      if(!array_.Equals(other.array_)) return false;
      if (!Map.Equals(other.Map)) return false;
      if (TestEnum != other.TestEnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (HasId) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (V1 != 0) hash ^= V1.GetHashCode();
      if (V2 != 0UL) hash ^= V2.GetHashCode();
      if (V3 != 0) hash ^= V3.GetHashCode();
      if (V4 != 0L) hash ^= V4.GetHashCode();
      if (Coin != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Coin);
      if (Money != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Money);
      if (Flag != false) hash ^= Flag.GetHashCode();
      if (Test.Length != 0) hash ^= Test.GetHashCode();
      hash ^= array_.GetHashCode();
      hash ^= Map.GetHashCode();
      if (TestEnum != global::ProtoTest.TestEnum.Unknown) hash ^= TestEnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(Value);
      }
      if (V1 != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(V1);
      }
      if (V2 != 0UL) {
        output.WriteRawTag(41);
        output.WriteFixed64(V2);
      }
      if (V3 != 0) {
        output.WriteRawTag(53);
        output.WriteSFixed32(V3);
      }
      if (V4 != 0L) {
        output.WriteRawTag(57);
        output.WriteSFixed64(V4);
      }
      if (Coin != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Coin);
      }
      if (Money != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Money);
      }
      if (Flag != false) {
        output.WriteRawTag(80);
        output.WriteBool(Flag);
      }
      if (Test.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Test);
      }
      array_.WriteTo(output, _repeated_array_codec);
      map_.WriteTo(output, _map_map_codec);
      if (TestEnum != global::ProtoTest.TestEnum.Unknown) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TestEnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (HasId) {
        output.WriteRawTag(8);
        output.WriteUInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value != 0L) {
        output.WriteRawTag(24);
        output.WriteSInt64(Value);
      }
      if (V1 != 0) {
        output.WriteRawTag(37);
        output.WriteFixed32(V1);
      }
      if (V2 != 0UL) {
        output.WriteRawTag(41);
        output.WriteFixed64(V2);
      }
      if (V3 != 0) {
        output.WriteRawTag(53);
        output.WriteSFixed32(V3);
      }
      if (V4 != 0L) {
        output.WriteRawTag(57);
        output.WriteSFixed64(V4);
      }
      if (Coin != 0F) {
        output.WriteRawTag(69);
        output.WriteFloat(Coin);
      }
      if (Money != 0D) {
        output.WriteRawTag(73);
        output.WriteDouble(Money);
      }
      if (Flag != false) {
        output.WriteRawTag(80);
        output.WriteBool(Flag);
      }
      if (Test.Length != 0) {
        output.WriteRawTag(90);
        output.WriteBytes(Test);
      }
      array_.WriteTo(ref output, _repeated_array_codec);
      map_.WriteTo(ref output, _map_map_codec);
      if (TestEnum != global::ProtoTest.TestEnum.Unknown) {
        output.WriteRawTag(112);
        output.WriteEnum((int) TestEnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (HasId) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeSInt64Size(Value);
      }
      if (V1 != 0) {
        size += 1 + 4;
      }
      if (V2 != 0UL) {
        size += 1 + 8;
      }
      if (V3 != 0) {
        size += 1 + 4;
      }
      if (V4 != 0L) {
        size += 1 + 8;
      }
      if (Coin != 0F) {
        size += 1 + 4;
      }
      if (Money != 0D) {
        size += 1 + 8;
      }
      if (Flag != false) {
        size += 1 + 1;
      }
      if (Test.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Test);
      }
      size += array_.CalculateSize(_repeated_array_codec);
      size += map_.CalculateSize(_map_map_codec);
      if (TestEnum != global::ProtoTest.TestEnum.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TestEnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TestRequest other) {
      if (other == null) {
        return;
      }
      if (other.HasId) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.V1 != 0) {
        V1 = other.V1;
      }
      if (other.V2 != 0UL) {
        V2 = other.V2;
      }
      if (other.V3 != 0) {
        V3 = other.V3;
      }
      if (other.V4 != 0L) {
        V4 = other.V4;
      }
      if (other.Coin != 0F) {
        Coin = other.Coin;
      }
      if (other.Money != 0D) {
        Money = other.Money;
      }
      if (other.Flag != false) {
        Flag = other.Flag;
      }
      if (other.Test.Length != 0) {
        Test = other.Test;
      }
      array_.Add(other.array_);
      map_.MergeFrom(other.map_);
      if (other.TestEnum != global::ProtoTest.TestEnum.Unknown) {
        TestEnum = other.TestEnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadSInt64();
            break;
          }
          case 37: {
            V1 = input.ReadFixed32();
            break;
          }
          case 41: {
            V2 = input.ReadFixed64();
            break;
          }
          case 53: {
            V3 = input.ReadSFixed32();
            break;
          }
          case 57: {
            V4 = input.ReadSFixed64();
            break;
          }
          case 69: {
            Coin = input.ReadFloat();
            break;
          }
          case 73: {
            Money = input.ReadDouble();
            break;
          }
          case 80: {
            Flag = input.ReadBool();
            break;
          }
          case 90: {
            Test = input.ReadBytes();
            break;
          }
          case 98: {
            array_.AddEntriesFrom(input, _repeated_array_codec);
            break;
          }
          case 106: {
            map_.AddEntriesFrom(input, _map_map_codec);
            break;
          }
          case 112: {
            TestEnum = (global::ProtoTest.TestEnum) input.ReadEnum();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadUInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadSInt64();
            break;
          }
          case 37: {
            V1 = input.ReadFixed32();
            break;
          }
          case 41: {
            V2 = input.ReadFixed64();
            break;
          }
          case 53: {
            V3 = input.ReadSFixed32();
            break;
          }
          case 57: {
            V4 = input.ReadSFixed64();
            break;
          }
          case 69: {
            Coin = input.ReadFloat();
            break;
          }
          case 73: {
            Money = input.ReadDouble();
            break;
          }
          case 80: {
            Flag = input.ReadBool();
            break;
          }
          case 90: {
            Test = input.ReadBytes();
            break;
          }
          case 98: {
            array_.AddEntriesFrom(ref input, _repeated_array_codec);
            break;
          }
          case 106: {
            map_.AddEntriesFrom(ref input, _map_map_codec);
            break;
          }
          case 112: {
            TestEnum = (global::ProtoTest.TestEnum) input.ReadEnum();
            break;
          }
        }
      }
    }
    #endif

  }

  [global::System.Diagnostics.DebuggerDisplayAttribute("{ToString(),nq}")]
  public sealed partial class TestResponse : pb::IMessage<TestResponse>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<TestResponse> _parser = new pb::MessageParser<TestResponse>(() => new TestResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<TestResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ProtoTest.ExampleReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestResponse(TestResponse other) : this() {
      power_ = other.power_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public TestResponse Clone() {
      return new TestResponse(this);
    }

    /// <summary>Field number for the "power" field.</summary>
    public const int PowerFieldNumber = 1;
    private uint power_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint Power {
      get { return power_; }
      set {
        power_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as TestResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(TestResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Power != other.Power) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Power != 0) hash ^= Power.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Power != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Power);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Power != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(Power);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Power != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Power);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(TestResponse other) {
      if (other == null) {
        return;
      }
      if (other.Power != 0) {
        Power = other.Power;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Power = input.ReadUInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
      if ((tag & 7) == 4) {
        // Abort on any end group tag.
        return;
      }
      switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Power = input.ReadUInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
